<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">
    <global-method-security pre-post-annotations="enabled">
    </global-method-security>
    <!-- 该路径下的资源不用过滤 -->
    <http pattern="/login.html" security="none" />
    <http pattern="/logout" security="none" />

    <http >

        <intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')"/>

        <form-login
                login-page="/login.html"
                default-target-url="/users.html"
                />

        <session-management
                session-fixation-protection="none">
            <concurrency-control error-if-maximum-exceeded="false"
                                 expired-url="/login.html?error=session" max-sessions="1"/>
        </session-management>

        <logout
                logout-url="/logout.html"
                invalidate-session="true"
                logout-success-url="/login.html?error=logout" />

        <csrf disabled="true" />
    </http>
    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5"></password-encoder>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT username, password, true as enabled
			FROM user WHERE username=?"
                               authorities-by-username-query="SELECT u.username, a.role as authority
			FROM user u inner join authority a
			on u.username=a.username WHERE u.username=? " />
        </authentication-provider>
    </authentication-manager>


</beans:beans>